{"ast":null,"code":"var _jsxFileName = \"/Users/tanzil/Documents/Ml project/front/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import your custom CSS\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [result, setResult] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setErrorMessage(''); // Clear error message when a new file is selected\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setErrorMessage('Please select a file first!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    setLoading(true); // Start loading state\n\n    try {\n      const response = await axios.post('https://mlproject-api.onrender.com/predict', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n      setResult(`Prediction: ${response.data.message} with confidence: ${response.data.confidence}`);\n      setErrorMessage(''); // Clear any previous error messages\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during file upload or prediction', error.response || error);\n      setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Error uploading file or getting prediction');\n      setResult(''); // Clear result on error\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Road Anomaly Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"file-label\",\n        children: [\"Select an image to upload:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"file-input\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(selectedFile),\n          alt: \"Preview\",\n          className: \"preview-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success submit-button\",\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-message success\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 18\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-message error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xy6xYTS+rS73S7JzUty1UO76OsM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","result","setResult","errorMessage","setErrorMessage","loading","setLoading","handleFileChange","event","target","files","handleSubmit","e","preventDefault","formData","FormData","append","response","post","headers","console","log","data","message","confidence","error","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","src","URL","createObjectURL","alt","_c","$RefreshReg$"],"sources":["/Users/tanzil/Documents/Ml project/front/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import your custom CSS\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [result, setResult] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setErrorMessage(''); // Clear error message when a new file is selected\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      setErrorMessage('Please select a file first!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    setLoading(true); // Start loading state\n\n    try {\n      const response = await axios.post('https://mlproject-api.onrender.com/predict', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      console.log(response.data);\n      setResult(`Prediction: ${response.data.message} with confidence: ${response.data.confidence}`);\n      setErrorMessage(''); // Clear any previous error messages\n    } catch (error) {\n      console.error('Error during file upload or prediction', error.response || error);\n      setErrorMessage(error.response?.data?.error || 'Error uploading file or getting prediction');\n      setResult(''); // Clear result on error\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-title\">Road Anomaly Detection</h1>\n\n      <form onSubmit={handleSubmit} className=\"upload-form\">\n        <label className=\"file-label\">\n          Select an image to upload:\n          <input type=\"file\" className=\"file-input\" onChange={handleFileChange} />\n        </label>\n\n        {selectedFile && (\n          <div className=\"image-preview\">\n            <img\n              src={URL.createObjectURL(selectedFile)}\n              alt=\"Preview\"\n              className=\"preview-image\"\n            />\n          </div>\n        )}\n\n        {loading ? (\n          <div className=\"loading-spinner\">Processing...</div>\n        ) : (\n          <button type=\"submit\" className=\"btn btn-success submit-button\">\n            Predict\n          </button>\n        )}\n      </form>\n\n      {result && <div className=\"result-message success\">{result}</div>}\n      {errorMessage && <div className=\"result-message error\">{errorMessage}</div>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}